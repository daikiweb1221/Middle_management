{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport axios from '../../plugins/axios';\nvar state = {\n  authUser: null\n};\nvar getters = {\n  authUser: function authUser(state) {\n    return state.authUser;\n  }\n};\nvar mutations = {\n  setUser: function setUser(state, user) {\n    state.authUser = user;\n  }\n};\nvar actions = {\n  loginUser: function loginUser(_ref, user) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, sessionsResponse, userResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.post('sessions', user);\n            case 3:\n              sessionsResponse = _context.sent;\n              localStorage.auth_token = sessionsResponse.data.token;\n              axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(localStorage.auth_token);\n\n              // ログインユーザー情報の取得\n              _context.next = 8;\n              return axios.get('users/me');\n            case 8:\n              userResponse = _context.sent;\n              commit('setUser', userResponse.data);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  logoutUser: function logoutUser(_ref2) {\n    var commit = _ref2.commit;\n    // ログアウト\n    localStorage.removeItem('auth_token');\n    axios.defaults.headers.common['Authorization'] = '';\n    commit('setUser', null);\n  },\n  fetchAuthUser: function fetchAuthUser(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var commit, state, userResponse, authUser;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit, state = _ref3.state;\n              if (localStorage.auth_token) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 3:\n              if (!state.authUser) {\n                _context2.next = 5;\n                break;\n              }\n              return _context2.abrupt(\"return\", state.authUser);\n            case 5:\n              _context2.next = 7;\n              return axios.get('users/me')[\"catch\"](function (err) {\n                return null;\n              });\n            case 7:\n              userResponse = _context2.sent;\n              if (userResponse) {\n                _context2.next = 10;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 10:\n              authUser = userResponse.data;\n              if (!authUser) {\n                _context2.next = 16;\n                break;\n              }\n              commit('setUser', authUser);\n              return _context2.abrupt(\"return\", authUser);\n            case 16:\n              commit('setUser', null);\n              return _context2.abrupt(\"return\", null);\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["axios","state","authUser","getters","mutations","setUser","user","actions","loginUser","commit","post","sessionsResponse","localStorage","auth_token","data","token","defaults","headers","common","get","userResponse","logoutUser","removeItem","fetchAuthUser","err","namespaced"],"sources":["/app/app/javascript/store/modules/users.js"],"sourcesContent":["import axios from '../../plugins/axios'\n\nconst state = {\n  authUser: null\n}\n\nconst getters =  {\n  authUser: state => state.authUser\n}\n\nconst mutations = {\n  setUser: (state, user) => {\n    state.authUser = user\n  }\n}\n\nconst actions = {\n  async loginUser({ commit }, user) {\n    // ログイン\n    const sessionsResponse = await axios.post('sessions', user)\n    localStorage.auth_token = sessionsResponse.data.token\n    axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.auth_token}`\n\n    // ログインユーザー情報の取得\n    const userResponse = await axios.get('users/me')\n    commit('setUser', userResponse.data)\n  },\n  logoutUser({ commit }) {\n    // ログアウト\n    localStorage.removeItem('auth_token')\n    axios.defaults.headers.common['Authorization'] = ''\n    commit('setUser', null)\n  },\n  async fetchAuthUser({ commit, state }) {\n    if (!localStorage.auth_token) return null\n    if (state.authUser) return state.authUser\n\n    const userResponse = await axios.get('users/me')\n      .catch((err) => {\n        return null\n      })\n    if (!userResponse) return null\n\n    const authUser = userResponse.data\n    if (authUser) {\n      commit('setUser', authUser)\n      return authUser\n    } else {\n      commit('setUser', null)\n      return null\n    }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n}"],"mappings":"+CACA;AAAA;AAAA;AADA,OAAOA,KAAK,MAAM,qBAAqB;AAEvC,IAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAMC,OAAO,GAAI;EACfD,QAAQ,EAAE,kBAAAD,KAAK;IAAA,OAAIA,KAAK,CAACC,QAAQ;EAAA;AACnC,CAAC;AAED,IAAME,SAAS,GAAG;EAChBC,OAAO,EAAE,iBAACJ,KAAK,EAAEK,IAAI,EAAK;IACxBL,KAAK,CAACC,QAAQ,GAAGI,IAAI;EACvB;AACF,CAAC;AAED,IAAMC,OAAO,GAAG;EACRC,SAAS,2BAAaF,IAAI,EAAE;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAhBG,MAAM,QAANA,MAAM;cAAA;cAAA,OAEST,KAAK,CAACU,IAAI,CAAC,UAAU,EAAEJ,IAAI,CAAC;YAAA;cAArDK,gBAAgB;cACtBC,YAAY,CAACC,UAAU,GAAGF,gBAAgB,CAACG,IAAI,CAACC,KAAK;cACrDf,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,oBAAaN,YAAY,CAACC,UAAU,CAAE;;cAEpF;cAAA;cAAA,OAC2Bb,KAAK,CAACmB,GAAG,CAAC,UAAU,CAAC;YAAA;cAA1CC,YAAY;cAClBX,MAAM,CAAC,SAAS,EAAEW,YAAY,CAACN,IAAI,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACtC,CAAC;EACDO,UAAU,6BAAa;IAAA,IAAVZ,MAAM,SAANA,MAAM;IACjB;IACAG,YAAY,CAACU,UAAU,CAAC,YAAY,CAAC;IACrCtB,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,EAAE;IACnDT,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;EACzB,CAAC;EACKc,aAAa,gCAAoB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAjBd,MAAM,SAANA,MAAM,EAAER,KAAK,SAALA,KAAK;cAAA,IAC5BW,YAAY,CAACC,UAAU;gBAAA;gBAAA;cAAA;cAAA,kCAAS,IAAI;YAAA;cAAA,KACrCZ,KAAK,CAACC,QAAQ;gBAAA;gBAAA;cAAA;cAAA,kCAASD,KAAK,CAACC,QAAQ;YAAA;cAAA;cAAA,OAEdF,KAAK,CAACmB,GAAG,CAAC,UAAU,CAAC,SACxC,CAAC,UAACK,GAAG,EAAK;gBACd,OAAO,IAAI;cACb,CAAC,CAAC;YAAA;cAHEJ,YAAY;cAAA,IAIbA,YAAY;gBAAA;gBAAA;cAAA;cAAA,kCAAS,IAAI;YAAA;cAExBlB,QAAQ,GAAGkB,YAAY,CAACN,IAAI;cAAA,KAC9BZ,QAAQ;gBAAA;gBAAA;cAAA;cACVO,MAAM,CAAC,SAAS,EAAEP,QAAQ,CAAC;cAAA,kCACpBA,QAAQ;YAAA;cAEfO,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;cAAA,kCAChB,IAAI;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEf;AACF,CAAC;AAED,eAAe;EACbgB,UAAU,EAAE,IAAI;EAChBxB,KAAK,EAALA,KAAK;EACLE,OAAO,EAAPA,OAAO;EACPC,SAAS,EAATA,SAAS;EACTG,OAAO,EAAPA;AACF,CAAC"},"metadata":{},"sourceType":"module"}