{"ast":null,"code":"import axios from \"../../plugins/axios\";\nvar state = {\n  everyday_behaviors: {}\n};\nvar getters = {\n  everyday_behaviors: function everyday_behaviors(state) {\n    return state.everyday_behaviors;\n  }\n};\nvar mutations = {\n  setEverydayBehaviors: function setEverydayBehaviors(state, everyday_behaviors) {\n    state.everyday_behaviors = everyday_behaviors[0];\n    console.log(everyday_behaviors);\n  },\n  addEverydayBehavior: function addEverydayBehavior(state, everyday_behavior) {\n    state.everyday_behaviors.push(everyday_behavior);\n  },\n  updateEverydayBehavior: function updateEverydayBehavior(state, _updateEverydayBehavior) {\n    var index = state.everyday_behaviors.findIndex(function (everyday_behavior) {\n      return everyday_behavior.id == _updateEverydayBehavior.id;\n    });\n    state.everyday_behaviors.splice(index, 1, _updateEverydayBehavior);\n  }\n};\nvar actions = {\n  fetchEverydayBehaviors: function fetchEverydayBehaviors(_ref) {\n    var commit = _ref.commit;\n    axios.get(\"everyday_behaviors\").then(function (res) {\n      commit(\"setEverydayBehaviors\", res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err.response);\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["axios","state","everyday_behaviors","getters","mutations","setEverydayBehaviors","console","log","addEverydayBehavior","everyday_behavior","push","updateEverydayBehavior","index","findIndex","id","splice","actions","fetchEverydayBehaviors","commit","get","then","res","data","err","response","namespaced"],"sources":["/app/app/javascript/store/modules/everyday_behaviors.js"],"sourcesContent":["import axios from \"../../plugins/axios\";\n\nconst state = {\n  everyday_behaviors: {},\n};\n\nconst getters = {\n  everyday_behaviors: (state) => state.everyday_behaviors,\n};\n\nconst mutations = {\n  setEverydayBehaviors: (state, everyday_behaviors) => {\n    state.everyday_behaviors = everyday_behaviors[0];\n    console.log(everyday_behaviors);\n  },\n  addEverydayBehavior: (state, everyday_behavior) => {\n    state.everyday_behaviors.push(everyday_behavior);\n  },\n  updateEverydayBehavior: (state, updateEverydayBehavior) => {\n    const index = state.everyday_behaviors.findIndex((everyday_behavior) => {\n      return everyday_behavior.id == updateEverydayBehavior.id;\n    });\n    state.everyday_behaviors.splice(index, 1, updateEverydayBehavior);\n  },\n};\n\nconst actions = {\n  fetchEverydayBehaviors({ commit }) {\n    axios\n      .get(\"everyday_behaviors\")\n      .then((res) => {\n        commit(\"setEverydayBehaviors\", res.data);\n      })\n      .catch((err) => console.log(err.response));\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,qBAAqB;AAEvC,IAAMC,KAAK,GAAG;EACZC,kBAAkB,EAAE,CAAC;AACvB,CAAC;AAED,IAAMC,OAAO,GAAG;EACdD,kBAAkB,EAAE,4BAACD,KAAK;IAAA,OAAKA,KAAK,CAACC,kBAAkB;EAAA;AACzD,CAAC;AAED,IAAME,SAAS,GAAG;EAChBC,oBAAoB,EAAE,8BAACJ,KAAK,EAAEC,kBAAkB,EAAK;IACnDD,KAAK,CAACC,kBAAkB,GAAGA,kBAAkB,CAAC,CAAC,CAAC;IAChDI,OAAO,CAACC,GAAG,CAACL,kBAAkB,CAAC;EACjC,CAAC;EACDM,mBAAmB,EAAE,6BAACP,KAAK,EAAEQ,iBAAiB,EAAK;IACjDR,KAAK,CAACC,kBAAkB,CAACQ,IAAI,CAACD,iBAAiB,CAAC;EAClD,CAAC;EACDE,sBAAsB,EAAE,gCAACV,KAAK,EAAEU,uBAAsB,EAAK;IACzD,IAAMC,KAAK,GAAGX,KAAK,CAACC,kBAAkB,CAACW,SAAS,CAAC,UAACJ,iBAAiB,EAAK;MACtE,OAAOA,iBAAiB,CAACK,EAAE,IAAIH,uBAAsB,CAACG,EAAE;IAC1D,CAAC,CAAC;IACFb,KAAK,CAACC,kBAAkB,CAACa,MAAM,CAACH,KAAK,EAAE,CAAC,EAAED,uBAAsB,CAAC;EACnE;AACF,CAAC;AAED,IAAMK,OAAO,GAAG;EACdC,sBAAsB,wCAAa;IAAA,IAAVC,MAAM,QAANA,MAAM;IAC7BlB,KAAK,CACFmB,GAAG,CAAC,oBAAoB,CAAC,CACzBC,IAAI,CAAC,UAACC,GAAG,EAAK;MACbH,MAAM,CAAC,sBAAsB,EAAEG,GAAG,CAACC,IAAI,CAAC;IAC1C,CAAC,CAAC,SACI,CAAC,UAACC,GAAG;MAAA,OAAKjB,OAAO,CAACC,GAAG,CAACgB,GAAG,CAACC,QAAQ,CAAC;IAAA,EAAC;EAC9C;AACF,CAAC;AAED,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBxB,KAAK,EAALA,KAAK;EACLE,OAAO,EAAPA,OAAO;EACPC,SAAS,EAATA,SAAS;EACTY,OAAO,EAAPA;AACF,CAAC"},"metadata":{},"sourceType":"module"}