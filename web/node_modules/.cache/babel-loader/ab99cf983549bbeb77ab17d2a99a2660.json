{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nexport default {\n  data: function data() {\n    return {\n      subordinate: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"subordinates\"])), {}, {\n    subordinateData: function subordinateData() {\n      var SubordinateId = parseInt(this.$route.params.id, 10);\n      var subordinate = this.$store.state.subordinates.find(function (subordinate) {\n        return subordinate.id === SubordinateId;\n      });\n      return subordinate;\n    }\n  })\n};","map":{"version":3,"mappings":";;;AAeA;EACAA;IACA;MACAC;IACA;EACA;EACAC,0CACAC;IACAC;MACA;MACA,sDACA;QAAA;MAAA,EACA;MACA;IACA;EAAA;AAEA","names":["data","subordinate","computed","mapGetters","subordinateData"],"sourceRoot":"app/javascript/pages/subordinate-detail","sources":["index.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>部下詳細ページ</h1>\n    <div>\n      <router-link :to=\"{ name: 'SubordinateIndex' }\" class=\"btn btn-dark mt-5\"\n        >部下一覧へ</router-link\n      >\n    </div>\n    <div>\n      <span>{{ subordinates.name }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      subordinate: {}\n    };\n  },\n  computed: {\n    ...mapGetters([\"subordinates\"]),\n    subordinateData() {\n      const SubordinateId = parseInt(this.$route.params.id, 10);\n      const subordinate = this.$store.state.subordinates.find(\n        (subordinate) => subordinate.id === SubordinateId\n      );\n      return subordinate;\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}