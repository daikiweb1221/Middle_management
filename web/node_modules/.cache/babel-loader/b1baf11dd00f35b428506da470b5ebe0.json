{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"RegisterIndex\",\n  data: function data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\"\n      },\n      show1: false\n    };\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(\"users\", [\"loginUser\", \"fetchUser\"])), {}, {\n    submit: function submit() {\n      this.$refs.observer.validate();\n    },\n    required: function required(value) {\n      if (value) {\n        return true;\n      } else {\n        return \"パスワード再入力は必須項目です\";\n      }\n    },\n    min3: function min3(value) {\n      if (value.length >= 3) {\n        return true;\n      } else {\n        return \"パスワード再入力は3文字以上で入力してください\";\n      }\n    },\n    matchingPasswords: function matchingPasswords() {\n      if (this.user.password === this.user.password_confirmation) {\n        return true;\n      } else {\n        return \"パスワードが一致しません\";\n      }\n    },\n    register: function register() {\n      var _this = this;\n      this.$axios.post(\"users\", {\n        user: this.user\n      }).then(function (res) {\n        _this.loginUser(_this.user);\n        _this.$router.push({\n          name: \"SubordinateIndex\"\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;AAiKA;AAEA;EACAA;EACAC;IACA;MACAC;QACAF;QACAG;QACAC;QACAC;MACA;MACAC;IACA;EACA;EACAC,yCACAC;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MACA,YACAC;QAAAZ;MAAA,GACAa;QACA;QACA;UAAAf;QAAA;MACA,WACA;QACAgB;MACA;IACA;EAAA;AAEA","names":["name","data","user","email","password","password_confirmation","show1","methods","mapActions","submit","required","min3","matchingPasswords","register","post","then","console"],"sourceRoot":"app/javascript/pages/register","sources":["index.vue"],"sourcesContent":["<template>\n  <!-- <ValidationObserver v-slot=\"{ handleSubmit }\">\n      <div class=\"form-group text-left\">\n        <ValidationProvider v-slot=\"{ errors }\" rules=\"required\">\n          <label for=\"name\">ユーザー名</label>\n          <input\n            id=\"name\"\n            v-model=\"user.name\"\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"username\"\n          />\n          <span class=\"text-danger\">{{ errors[0] }}</span>\n        </ValidationProvider>\n      </div>\n      <div class=\"form-group text-left\">\n        <ValidationProvider v-slot=\"{ errors }\" rules=\"required|email\">\n          <label for=\"email\">メールアドレス</label>\n          <input\n            id=\"email\"\n            v-model=\"user.email\"\n            type=\"email\"\n            class=\"form-control\"\n            placeholder=\"test@example.com\"\n          />\n          <span class=\"text-danger\">{{ errors[0] }}</span>\n        </ValidationProvider>\n      </div>\n      <div class=\"form-group text-left\">\n        <ValidationProvider v-slot=\"{ errors }\" rules=\"required\" vid=\"password\">\n          <label for=\"password\">パスワード</label>\n          <input\n            id=\"password\"\n            v-model=\"user.password\"\n            type=\"password\"\n            class=\"form-control\"\n            placeholder=\"password\"\n          />\n          <span class=\"text-danger\">{{ errors[0] }}</span>\n        </ValidationProvider>\n      </div>\n      <div class=\"form-group text-left\">\n        <ValidationProvider\n          v-slot=\"{ errors }\"\n          rules=\"required|min:3|password_confirmed:@password\"\n        >\n          <label for=\"password_confirmation\">パスワード（確認）</label>\n          <input\n            id=\"password_confirmation\"\n            v-model=\"user.password_confirmation\"\n            type=\"password\"\n            class=\"form-control\"\n            placeholder=\"password\"\n          />\n          <span class=\"text-danger\">{{ errors[0] }}</span>\n        </ValidationProvider>\n      </div>\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary\"\n        @click=\"handleSubmit(register)\"\n      >\n        登録\n      </button>\n    </ValidationObserver> -->\n\n  <!-- ------------------------------------ -->\n  <div\n    id=\"register-form\"\n    class=\"container text-center\"\n    style=\"margin-top: 140px\"\n  >\n    <p class=\"text-h4\">Middle Managementをはじめる</p>\n    <div style=\"max-width: 600px\" class=\"mx-auto mt-15\">\n      <validation-observer ref=\"observer\" v-slot=\"{ handleSubmit }\">\n        <form @submit.prevent=\"submit\">\n          <ValidationProvider\n            v-slot=\"{ errors }\"\n            rules=\"required|max:20\"\n            name=\"ニックネーム\"\n          >\n            <v-text-field\n              label=\"ニックネーム\"\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              clearable\n              outlined\n              dense\n              v-model=\"user.name\"\n              :error-messages=\"errors\"\n            ></v-text-field>\n          </ValidationProvider>\n\n          <validation-provider\n            v-slot=\"{ errors }\"\n            name=\"メールアドレス\"\n            rules=\"required|email\"\n          >\n            <v-text-field\n              v-model=\"user.email\"\n              :error-messages=\"errors\"\n              label=\"メールアドレス\"\n              required\n              outlined\n              dense\n            ></v-text-field>\n          </validation-provider>\n\n          <validation-provider\n            v-slot=\"{ errors }\"\n            name=\"パスワード\"\n            rules=\"required|min:3\"\n          >\n            <v-text-field\n              v-model=\"user.password\"\n              :error-messages=\"errors\"\n              label=\"パスワード\"\n              required\n              :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n              :type=\"show1 ? 'text' : 'password'\"\n              name=\"input-10-1\"\n              counter\n              @click:append=\"show1 = !show1\"\n              outlined\n              dense\n            ></v-text-field>\n          </validation-provider>\n\n          <validation-provider v-slot=\"{ errors }\" name=\"パスワード再入力\">\n            <v-text-field\n              :rules=\"[required, min3, matchingPasswords]\"\n              v-model=\"user.password_confirmation\"\n              :error-messages=\"errors\"\n              label=\"パスワード再入力\"\n              required\n              :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n              :type=\"show1 ? 'text' : 'password'\"\n              name=\"input-10-1\"\n              counter\n              @click:append=\"show1 = !show1\"\n              outlined\n              dense\n            ></v-text-field>\n          </validation-provider>\n\n          <v-btn\n            color=\"primary\"\n            class=\"mr-4 font-weight-bold px-10\"\n            type=\"submit\"\n            @click=\"handleSubmit(register)\"\n          >\n            新規登録\n          </v-btn>\n        </form>\n      </validation-observer>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\n\nexport default {\n  name: \"RegisterIndex\",\n  data() {\n    return {\n      user: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n      },\n      show1: false,\n    };\n  },\n  methods: {\n    ...mapActions(\"users\", [\"loginUser\", \"fetchUser\"]),\n    submit() {\n      this.$refs.observer.validate();\n    },\n    required(value) {\n      if (value) {\n        return true;\n      } else {\n        return \"パスワード再入力は必須項目です\";\n      }\n    },\n    min3(value) {\n      if (value.length >= 3) {\n        return true;\n      } else {\n        return \"パスワード再入力は3文字以上で入力してください\";\n      }\n    },\n    matchingPasswords() {\n      if (this.user.password === this.user.password_confirmation) {\n        return true;\n      } else {\n        return \"パスワードが一致しません\";\n      }\n    },\n    register() {\n      this.$axios\n        .post(\"users\", { user: this.user })\n        .then((res) => {\n          this.loginUser(this.user);\n          this.$router.push({ name: \"SubordinateIndex\" });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}