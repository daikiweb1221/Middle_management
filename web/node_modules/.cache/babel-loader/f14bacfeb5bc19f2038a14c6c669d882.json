{"ast":null,"code":"export default {\n  name: \"IdealBossChecks\",\n  data: function data() {\n    return {\n      answers: [],\n      questionIndex: 0,\n      correctCount: 0,\n      questions: [{\n        question: \"部下に自分から挨拶していますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下と話している時に腕や足を組まないようにしていますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下の意見に対しどんなことでも否定から入らないようにしていますか？（受け入れるではなく受け止める）\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下への感情表現が豊かにできていますか？（リアクションが取れているか）\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下の話を遮らず最後まで聞いていますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下の目を見て相槌しながら話を聞けてますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下への挨拶や感謝をするとき、また会話中に部下の名前を呼んでいますか？　例「おはようございます」→「〇〇さんおはようございます」「ありがとうございます」→「〇〇さん、ありがとうございます」\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下へ反射レベルでありがとうと言えていますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下を褒めるときはあえて「大勢の前で」、逆に指摘するときは「1人の時に」していますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"指示や命令ではなく部下からのアドバイスを求められていますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下の変化に気づいて一言かけられていますか？（髪型や髪色を変えた時、新しい服を着ている時、スリムになった時、ネイルが変わった時、悩み事がある時、体調が悪い、いつもより元気がない時など）\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }, {\n        question: \"部下の誕生日を一人一人把握していますか？またお祝いの言葉を贈れていますか？\",\n        answers: [\"Yes\", \"No\"],\n        answer: 0\n      }]\n    };\n  },\n  methods: {\n    addAnswer: function addAnswer(index) {\n      this.answers.push(index);\n      if (this.questions.length == this.answers.length) {\n        for (var i in this.answers) {\n          var answer = this.answers[i];\n          if (answer == this.questions[i].answer) {\n            this.correctCount++;\n          }\n        }\n      } else {\n        this.questionIndex++;\n      }\n      return console.log(this.correctCount);\n    },\n    reload: function reload() {\n      this.$router.go({\n        path: this.$router.currentRoute.path,\n        force: true\n      });\n    }\n  },\n  computed: {\n    currentQuestion: function currentQuestion() {\n      return this.questions[this.questionIndex];\n    },\n    completed: function completed() {\n      return this.questions.length == this.answers.length;\n    },\n    rankA: function rankA() {\n      return this.correctCount >= 11;\n    },\n    rankB: function rankB() {\n      return this.correctCount === 10;\n    },\n    rankC: function rankC() {\n      return this.correctCount === 9;\n    },\n    rankD: function rankD() {\n      return this.correctCount === 8;\n    },\n    rankE: function rankE() {\n      return this.correctCount === 7;\n    },\n    rankF: function rankF() {\n      return this.correctCount === 6;\n    },\n    rankG: function rankG() {\n      return this.correctCount <= 5;\n    }\n  }\n};","map":{"version":3,"mappings":"AA+GA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC,YACA;QACAC;QACAJ;QACAK;MACA,GACA;QACAD;QACAJ;QACAK;MACA,GACA;QACAD,UACA;QACAJ;QACAK;MACA,GACA;QACAD,UACA;QACAJ;QACAK;MACA,GACA;QACAD;QACAJ;QACAK;MACA,GACA;QACAD;QACAJ;QACAK;MACA,GACA;QACAD,UACA;QACAJ;QACAK;MACA,GACA;QACAD;QACAJ;QACAK;MACA,GACA;QACAD,UACA;QACAJ;QACAK;MACA,GACA;QACAD,UACA;QACAJ;QACAK;MACA,GACA;QACAD,UACA;QACAJ;QACAK;MACA,GACA;QACAD,UACA;QACAJ;QACAK;MACA;IAEA;EACA;EACAC;IACAC;MACA;MACA;QACA;UACA;UAEA;YACA;UACA;QACA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;QAAAC;QAAAC;MAAA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","answers","questionIndex","correctCount","questions","question","answer","methods","addAnswer","reload","path","force","computed","currentQuestion","completed","rankA","rankB","rankC","rankD","rankE","rankF","rankG"],"sourceRoot":"app/javascript/pages/ideal_boss_checks","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"container position-center\">\n      <h3 class=\"text-center mb-9\">あなたの上司力をチェックしてみましょう</h3>\n      <!-- クイズを表示する部分 -->\n      <div v-if=\"!completed\" id=\"quiz\">\n        <v-card loading elevation=\"2\" shaped>\n          <v-card-text class=\"text-center\">\n            <p class=\"card-header-title text--primary\">\n              第 {{ questionIndex + 1 }} 問\n            </p>\n            <div class=\"card-content\">\n              <div class=\"content\">\n                <p class=\"text--primary\">{{ currentQuestion.question }}</p>\n              </div>\n            </div>\n          </v-card-text>\n\n          <v-card-actions\n            class=\"text-center\"\n            style=\"max-width: 300px; margin: auto; display: block\"\n          >\n            <v-btn\n              type=\"submit\"\n              v-for=\"(answer, index) in currentQuestion.answers\"\n              v-bind:key=\"index\"\n              @click=\"addAnswer(index)\"\n            >\n              {{ answer }}\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </div>\n\n      <!-- 結果表示する部分 -->\n      <div v-if=\"completed\">\n        <v-card elevation=\"14\" class=\"text-center\">\n          <p class=\"rank-heading text-left\">あなたの上司力は・・・</p>\n          <div v-if=\"rankA\">\n            <p class=\"rank-text\">\n              <span class=\"rank class-a\">A</span>ランクです\n            </p>\n            <p class=\"rank-description\">\n              素晴らしい！あなたの日々の行動や立ち振る舞いは人に動いてもらえる理想の上司です。<br />継続できるようたまには振り返りをしてみましょう。\n            </p>\n          </div>\n          <div v-if=\"rankB\">\n            <p class=\"rank-text\">\n              <span class=\"rank class-b\">B</span>ランクです\n            </p>\n            <p class=\"rank-description\">\n              素晴らしい！あなたの日々の行動や立ち振る舞いは人に動いてもらえる理想の上司です。<br />継続できるようたまには振り返りをしてみましょう。\n            </p>\n          </div>\n          <div v-if=\"rankC\">\n            <p class=\"rank-text\">\n              <span class=\"rank class-c\">C</span>ランクです\n            </p>\n            <p class=\"rank-description\">\n              素晴らしい！あなたの日々の行動や立ち振る舞いは人に動いてもらえる理想の上司です。<br />継続できるようたまには振り返りをしてみましょう。\n            </p>\n          </div>\n          <div v-if=\"rankD\">\n            <p class=\"rank-text\">\n              <span class=\"rank class-d\">D</span>ランクです\n            </p>\n            <p class=\"rank-description\">\n              素晴らしい！あなたの日々の行動や立ち振る舞いは人に動いてもらえる理想の上司です。<br />継続できるようたまには振り返りをしてみましょう。\n            </p>\n          </div>\n          <div v-if=\"rankE\">\n            <p class=\"rank-text\">\n              <span class=\"rank class-e\">E</span>ランクです\n            </p>\n            <p class=\"rank-description\">\n              素晴らしい！あなたの日々の行動や立ち振る舞いは人に動いてもらえる理想の上司です。<br />継続できるようたまには振り返りをしてみましょう。\n            </p>\n          </div>\n          <div v-if=\"rankF\">\n            <p class=\"rank-text\">\n              <span class=\"rank class-f\">F</span>ランクです\n            </p>\n            <p class=\"rank-description\">\n              素晴らしい！あなたの日々の行動や立ち振る舞いは人に動いてもらえる理想の上司です。<br />継続できるようたまには振り返りをしてみましょう。\n            </p>\n          </div>\n          <div v-if=\"rankG\">\n            <p class=\"rank-text\">\n              <span class=\"rank class-g\">G</span>ランクです\n            </p>\n            <p class=\"rank-description\">\n              素晴らしい！あなたの日々の行動や立ち振る舞いは人に動いてもらえる理想の上司です。<br />継続できるようたまには振り返りをしてみましょう。\n            </p>\n          </div>\n        </v-card>\n      </div>\n      <div class=\"btn-wrap\">\n        <v-btn\n          color=\"primary\"\n          class=\"mr-4 font-weight-bold px-16\"\n          type=\"submit\"\n          @click=\"reload()\"\n        >\n          もう一度チェックする\n        </v-btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"IdealBossChecks\",\n  data() {\n    return {\n      answers: [],\n      questionIndex: 0,\n      correctCount: 0,\n      questions: [\n        {\n          question: \"部下に自分から挨拶していますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question: \"部下と話している時に腕や足を組まないようにしていますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question:\n            \"部下の意見に対しどんなことでも否定から入らないようにしていますか？（受け入れるではなく受け止める）\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question:\n            \"部下への感情表現が豊かにできていますか？（リアクションが取れているか）\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question: \"部下の話を遮らず最後まで聞いていますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question: \"部下の目を見て相槌しながら話を聞けてますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question:\n            \"部下への挨拶や感謝をするとき、また会話中に部下の名前を呼んでいますか？　例「おはようございます」→「〇〇さんおはようございます」「ありがとうございます」→「〇〇さん、ありがとうございます」\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question: \"部下へ反射レベルでありがとうと言えていますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question:\n            \"部下を褒めるときはあえて「大勢の前で」、逆に指摘するときは「1人の時に」していますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question:\n            \"指示や命令ではなく部下からのアドバイスを求められていますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question:\n            \"部下の変化に気づいて一言かけられていますか？（髪型や髪色を変えた時、新しい服を着ている時、スリムになった時、ネイルが変わった時、悩み事がある時、体調が悪い、いつもより元気がない時など）\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n        {\n          question:\n            \"部下の誕生日を一人一人把握していますか？またお祝いの言葉を贈れていますか？\",\n          answers: [\"Yes\", \"No\"],\n          answer: 0,\n        },\n      ],\n    };\n  },\n  methods: {\n    addAnswer(index) {\n      this.answers.push(index);\n      if (this.questions.length == this.answers.length) {\n        for (var i in this.answers) {\n          var answer = this.answers[i];\n\n          if (answer == this.questions[i].answer) {\n            this.correctCount++;\n          }\n        }\n      } else {\n        this.questionIndex++;\n      }\n      return console.log(this.correctCount);\n    },\n    reload() {\n      this.$router.go({ path: this.$router.currentRoute.path, force: true });\n    },\n  },\n  computed: {\n    currentQuestion() {\n      return this.questions[this.questionIndex];\n    },\n    completed() {\n      return this.questions.length == this.answers.length;\n    },\n    rankA() {\n      return this.correctCount >= 11;\n    },\n    rankB() {\n      return this.correctCount === 10;\n    },\n    rankC() {\n      return this.correctCount === 9;\n    },\n    rankD() {\n      return this.correctCount === 8;\n    },\n    rankE() {\n      return this.correctCount === 7;\n    },\n    rankF() {\n      return this.correctCount === 6;\n    },\n    rankG() {\n      return this.correctCount <= 5;\n    },\n  },\n};\n</script>\n\n<style>\n.position-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 0 25px;\n  width: 100%;\n}\n\n.btn-wrap {\n  max-width: 300px;\n  margin: 40px auto;\n}\n\n.rank {\n  font-size: 15rem;\n  font-weight: 900;\n  line-height: initial;\n}\n.class-a {\n  color: #d3b102;\n}\n.class-b {\n  color: silver;\n}\n.class-c {\n  color: orange;\n}\n.class-d {\n  color: #c5c500;\n}\n.class-e {\n  color: green;\n}\n.class-f {\n  color: #343490;\n}\n.class-g {\n  color: gray;\n}\n\n.rank-heading {\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 0 !important;\n  padding: 25px;\n  text-align: left !important;\n}\n\n.rank-text {\n  font-size: 3rem;\n  font-weight: bold;\n  margin-bottom: 0 !important;\n}\n\n.rank-description {\n  text-align: center;\n  padding: 0 25px 25px 25px;\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}