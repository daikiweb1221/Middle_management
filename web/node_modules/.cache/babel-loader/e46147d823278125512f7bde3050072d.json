{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"TopMindSet\",\n  computed: _objectSpread(_objectSpread({}, mapGetters(\"everyday_behaviors\", [\"everyday_behavior\"])), mapGetters(\"users\", [\"authUser\"])),\n  created: function created() {\n    this.fetchEverydayBehaviors();\n  },\n  methods: _objectSpread({}, mapActions(\"everyday_behaviors\", [\"fetchEverydayBehaviors\"]))\n};","map":{"version":3,"mappings":";;;AAyCA;AAEA;EACAA;EAEAC,0CACAC,0DACAA,kCACA;EAEAC;IACA;EACA;EAEAC,2BACAC;AAEA","names":["name","computed","mapGetters","created","methods","mapActions"],"sourceRoot":"app/javascript/pages/top","sources":["mindset.vue"],"sourcesContent":["<template>\n  <div class=\"text-wrap\">\n    <div class=\"text-cont\">\n      <p class=\"text-h5 mb-3\">１.{{ everyday_behavior.behaviors_one }}</p>\n      <p class=\"text-h5 mb-3\">２.{{ everyday_behavior.behaviors_two }}</p>\n      <p class=\"text-h5 mb-3\">３.{{ everyday_behavior.behaviors_three }}</p>\n      <p class=\"text-h5 mb-3\">４.{{ everyday_behavior.behaviors_four }}</p>\n      <p class=\"text-h5 mb-3\">５.{{ everyday_behavior.behaviors_five }}</p>\n      <div class=\"mt-10 text-h5\">\n        <p>ではもう一つ質問いたします</p>\n        <p>\n          上記の要素を<span class=\"font-weight-bold\" style=\"color: #d3b102\"\n            >{{ authUser.name }}さんは満たしていますか？</span\n          >\n        </p>\n      </div>\n      <div class=\"mt-10 text-h5\">\n        <p>部下の心を動かす「テクニック」は存在しますが</p>\n        <p>部下の心を動かすためにはテクニックだけでなく</p>\n        <p>話を聞くに値する自分自身の振る舞い</p>\n        <p>\n          つまり\"<span class=\"font-weight-bold\" style=\"color: #d3b102\"\n            >自身の日常の姿</span\n          >\"が土台になっていることを認識しましょう\n        </p>\n      </div>\n      <div class=\"btn-cont mt-10\">\n        <v-btn\n          color=\"primary\"\n          class=\"mr-4 font-weight-bold px-16\"\n          type=\"submit\"\n          :to=\"{ name: 'SubordinateIndex' }\"\n        >\n          次へ\n        </v-btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"TopMindSet\",\n\n  computed: {\n    ...mapGetters(\"everyday_behaviors\", [\"everyday_behavior\"]),\n    ...mapGetters(\"users\", [\"authUser\"]),\n  },\n\n  created() {\n    this.fetchEverydayBehaviors();\n  },\n\n  methods: {\n    ...mapActions(\"everyday_behaviors\", [\"fetchEverydayBehaviors\"]),\n  },\n};\n</script>\n\n<style scoped>\n.text-wrap {\n  /* text-align: center; */\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n.text-cont {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 0 25px;\n  max-width: 600px;\n  width: 100%;\n}\n\n.btn-cont {\n  text-align: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}