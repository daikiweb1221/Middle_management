{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport subordinates from './modules/subordinates';\nimport users from './modules/users';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  modules: {\n    subordinates: subordinates,\n    users: users\n  }\n\n  // state: {\n  //   subordinates: [],\n  // },\n\n  // getters: {\n  //   subordinates: (state) => state.subordinates,\n  // },\n\n  // mutations: {\n  //   setSubordinates: (state, subordinates) => {\n  //     state.subordinates = subordinates;\n  //   },\n  //   addSubordinate: (state, subordinate) => {\n  //     state.subordinates.push(subordinate);\n  //   },\n  //   updateSubordinate: (state, updateSubordinate) => {\n  //     const index = state.subordinates.findIndex((subordinate) => {\n  //       return subordinate.id == updateSubordinate.id;\n  //     });\n  //     state.subordinates.splice(index, 1, updateSubordinate);\n  //   },\n  //   deleteSubordinate: (state, deleteSubordinate) => {\n  //     state.subordinates = state.subordinates.filter((subordinate) => {\n  //       return subordinate.id != deleteSubordinate.id;\n  //     });\n  //   },\n  // },\n\n  // actions: {\n  //   fetchSubordinates({ commit }) {\n  //     axios\n  //       .get(\"subordinates\")\n  //       .then((res) => {\n  //         commit(\"setSubordinates\", res.data);\n  //       })\n  //       .catch((err) => console.log(err.response));\n  //   },\n  //   createSubordinate({ commit }, subordinate) {\n  //     return axios.post(\"subordinates\", subordinate).then((res) => {\n  //       commit(\"addSubordinate\", res.data);\n  //     });\n  //   },\n  // },\n});","map":{"version":3,"names":["Vue","Vuex","subordinates","users","use","Store","modules"],"sources":["/app/app/javascript/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport subordinates from './modules/subordinates'\nimport users from './modules/users'\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  modules: {\n    subordinates,\n    users,\n  },\n\n  // state: {\n  //   subordinates: [],\n  // },\n\n  // getters: {\n  //   subordinates: (state) => state.subordinates,\n  // },\n\n  // mutations: {\n  //   setSubordinates: (state, subordinates) => {\n  //     state.subordinates = subordinates;\n  //   },\n  //   addSubordinate: (state, subordinate) => {\n  //     state.subordinates.push(subordinate);\n  //   },\n  //   updateSubordinate: (state, updateSubordinate) => {\n  //     const index = state.subordinates.findIndex((subordinate) => {\n  //       return subordinate.id == updateSubordinate.id;\n  //     });\n  //     state.subordinates.splice(index, 1, updateSubordinate);\n  //   },\n  //   deleteSubordinate: (state, deleteSubordinate) => {\n  //     state.subordinates = state.subordinates.filter((subordinate) => {\n  //       return subordinate.id != deleteSubordinate.id;\n  //     });\n  //   },\n  // },\n\n  // actions: {\n  //   fetchSubordinates({ commit }) {\n  //     axios\n  //       .get(\"subordinates\")\n  //       .then((res) => {\n  //         commit(\"setSubordinates\", res.data);\n  //       })\n  //       .catch((err) => console.log(err.response));\n  //   },\n  //   createSubordinate({ commit }, subordinate) {\n  //     return axios.post(\"subordinates\", subordinate).then((res) => {\n  //       commit(\"addSubordinate\", res.data);\n  //     });\n  //   },\n  // },\n});\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,KAAK,MAAM,iBAAiB;AAEnCH,GAAG,CAACI,GAAG,CAACH,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACI,KAAK,CAAC;EAC5BC,OAAO,EAAE;IACPJ,YAAY,EAAZA,YAAY;IACZC,KAAK,EAALA;EACF;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}